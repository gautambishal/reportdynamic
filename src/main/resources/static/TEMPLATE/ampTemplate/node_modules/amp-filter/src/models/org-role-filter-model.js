var $ = require('jquery');

var GenericFilterModel = require('../models/generic-filter-model');
var TreeNodeModel = require('../tree/tree-node-model');


module.exports = GenericFilterModel.extend({


  initialize:function(options) {
    this.loaded = $.Deferred();
    this._createTree(options.data);
    GenericFilterModel.prototype.initialize.apply(this, [options]);
  },

  //org doesn't have async part, but still use deferred, so behaves same as generic filter model
  getTree: function() {
    return this.loaded;
  },

  _createTree:function(data) {
    var self = this;
    var rootNodeObj = {};
    if (data.length === 1) {
      rootNodeObj = data[0];
    } else {
      rootNodeObj = {
        id: -1,
        code: '-1',
        name: self.get('displayName'),
        filterId: self.get('filterId'),
        children: data,
        selected: undefined,
        expanded: false,
        isSelectable: false,
        createUnkowns: false
      };
    }

    var treeModel = new TreeNodeModel(rootNodeObj);
    this.set('tree', treeModel);

    // trickle up numSelected.
    self.get('tree').on('change:numSelected', function(model, value) {
      self.set('numSelected', value);
      self.set('numPossible', self.get('tree').get('numPossible'));
    });

    this.loaded.resolve(treeModel);
  }

});

